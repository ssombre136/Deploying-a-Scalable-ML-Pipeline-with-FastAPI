name: Python application

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest scikit-learn pandas

      - name: Read local CSV file
        id: read_csv
        run: |
          csv_path='/home/runner/work/Deploying-a-Scalable-ML-Pipeline-with-FastAPI/Deploying-a-Scalable-ML-Pipeline-with-FastAPI' 
          echo "::set-output name=csv_path::$csv_path"
        env:
          PYTHONPATH: ${{ runner.tools.python }}

      - name: Get flake8 path
        id: get_flake8_path
        run: echo "::set-output name=flake8_path::$(which flake8)"

      - name: Lint with flake8
        if: runner.os == 'Linux'
        run: |
          # use the full path to the flake8 command
          FLAKE8_PATH=${{ steps.get_flake8_path.outputs.flake8_path }}
          $FLAKE8_PATH . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          $FLAKE8_PATH . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        env:
          PYTHONPATH: ${{ runner.tools.python }}

      - name: Lint with flake8 (Windows)
        if: runner.os == 'Windows'
        run: |
          # use the full path to the flake8 command
          $FLAKE8_PATH = ${{ steps.get_flake8_path.outputs.flake8_path }}
          python $FLAKE8_PATH /data /ml --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python $FLAKE8_PATH /data /ml --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        env:
          PYTHONPATH: ${{ runner.tools.python }}

      - name: Test with pytest
        run: |
          pytest
